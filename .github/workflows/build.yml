name: Arkitect

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
  release:
    types:
      - published

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [ '7.1', '7.2', '7.3', '7.4', '8.0' ]

    steps:
    - uses: actions/checkout@v2

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      #if: steps.composer-cache.outputs.cache-hit != 'true'
      uses: php-actions/composer@v5
      with:
        args: --prefer-dist
        composer_version: 2
        php_version: 7.1

    - name: Coding Standard Checks
      run: PHP_CS_FIXER_IGNORE_ENV=1 ./bin/php-cs-fixer fix --dry-run -v

    - name: Static Analysis
      run: ./bin/psalm

    - name: Test
      run: ./bin/phpunit

  publish_docker_images:
    needs: build
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/master' || github.event_name == 'release'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Docker meta
      id: meta
      uses: crazy-max/ghaction-docker-meta@v2
      with:
        images: phparkitect/phparkitect
        tags: |
          type=raw,value=latest,enable=${{ endsWith(github.ref, 'master') }}
          type=ref,event=tag
        flavor: |
          latest=false
    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  create_phar:
    needs: build
    runs-on: ubuntu-latest

    if: ${{ github.event_name == 'release' }}
    steps:
    - uses: actions/checkout@v2
    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 7.1

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      #if: steps.composer-cache.outputs.cache-hit != 'true'
      uses: php-actions/composer@v5
      with:
        args: --prefer-dist
        composer_version: 2
        php_version: 7.1

    - name: "Compile phparkitect phar"
      run: ./bin-stub/box.phar build -c ./box.json

    - name: "Upload phar file artifact"
      uses: actions/upload-artifact@v2
      with:
        name: phparkitect.phar
        path: phparkitect.phar
